# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/cli.ipynb.

# %% auto 0
__all__ = ['lit_commands', 'StartProject', 'StartApp', 'LitManagementUtility', 'cli']

# %% ../nbs/cli.ipynb 3
import importlib
import os
import sys

from django.core.management import ManagementUtility, execute_from_command_line, get_commands
from django.core.management.commands.startapp import Command as StartApp
from django.core.management.commands.startproject import Command as StartProject

# %% ../nbs/cli.ipynb 4
class StartProject(StartProject):
    pass

# %% ../nbs/cli.ipynb 5
class StartApp(StartApp):
    pass

# %% ../nbs/cli.ipynb 6
lit_commands = {
    "startapp": StartApp(),
    "startproject": StartProject()
}

# %% ../nbs/cli.ipynb 7
class LitManagementUtility(ManagementUtility):

    def __init__(self, argv=None):
        super().__init__(argv)

    def fetch_command(self, subcommand):
        """
        Patch of ManagementUtility method to add litdjango management commands.

        Tries to fetch the given subcommand, printing a message with the
        appropriate command called from the command line if it can't be found.
        """
        try:
            return lit_commands[subcommand]
        except KeyError:
            # Fall back to django default if we have not defined a custom command
            return super().fetch_command(subcommand)

# %% ../nbs/cli.ipynb 8
def cli():
    utility = LitManagementUtility(sys.argv)
    utility.execute()

